{"ast":null,"code":"var _jsxFileName = \"/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ScanButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanButton = ({\n  onModelUploaded\n}) => {\n  _s();\n  const [showQR, setShowQR] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const startScanning = () => {\n    const newSessionId = Math.random().toString(36).substring(7);\n    setSessionId(newSessionId);\n    setShowQR(true);\n    setScanning(true);\n    pollForModel(newSessionId);\n  };\n  const pollForModel = async sid => {\n    if (!scanning) return;\n    try {\n      const response = await fetch(`/api/scan-status/${sid}`);\n      const data = await response.json();\n      if (data.status === 'complete' && data.modelUrl) {\n        setShowQR(false);\n        setScanning(false);\n        onModelUploaded(data.modelUrl);\n      } else if (data.status === 'processing') {\n        // Poll again in 3 seconds\n        setTimeout(() => pollForModel(sid), 3000);\n      }\n    } catch (error) {\n      console.error('Error checking scan status:', error);\n      setShowQR(false);\n      setScanning(false);\n    }\n  };\n  const getQRContent = () => {\n    // This URL should point to your iOS app's custom URL scheme\n    return `rosasdodeserto://scan/${sessionId}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startScanning,\n      className: \"scan-button\",\n      disabled: scanning,\n      children: scanning ? 'Scanning in progress...' : 'Scan New Object'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showQR && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Scan QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Open the Rosas do Deserto app to scan your object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n          value: getQRContent(),\n          size: 256\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowQR(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .scan-button-container {\n          position: fixed;\n          bottom: 2rem;\n          right: 2rem;\n          z-index: 1000;\n        }\n\n        .scan-button {\n          background: #2196F3;\n          color: white;\n          padding: 1rem 2rem;\n          border: none;\n          border-radius: 8px;\n          font-size: 1.1rem;\n          cursor: pointer;\n          transition: background 0.3s ease;\n        }\n\n        .scan-button:hover {\n          background: #1976D2;\n        }\n\n        .scan-button:disabled {\n          background: #90CAF9;\n          cursor: not-allowed;\n        }\n\n        .qr-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .qr-content {\n          background: white;\n          padding: 2rem;\n          border-radius: 12px;\n          text-align: center;\n        }\n\n        .qr-content h3 {\n          margin-top: 0;\n        }\n\n        .qr-content button {\n          margin-top: 1rem;\n          padding: 0.5rem 1rem;\n          background: #f44336;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanButton, \"qI8znwc+VJ6TD22S5/gcTPeQOwA=\");\n_c = ScanButton;\nexport default ScanButton;\nvar _c;\n$RefreshReg$(_c, \"ScanButton\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","ScanButton","onModelUploaded","_s","showQR","setShowQR","sessionId","setSessionId","scanning","setScanning","startScanning","newSessionId","Math","random","toString","substring","pollForModel","sid","response","fetch","data","json","status","modelUrl","setTimeout","error","console","getQRContent","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","value","size","jsx","_c","$RefreshReg$"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ScanButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\n\nconst ScanButton = ({ onModelUploaded }) => {\n  const [showQR, setShowQR] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [scanning, setScanning] = useState(false);\n\n  const startScanning = () => {\n    const newSessionId = Math.random().toString(36).substring(7);\n    setSessionId(newSessionId);\n    setShowQR(true);\n    setScanning(true);\n    pollForModel(newSessionId);\n  };\n\n  const pollForModel = async (sid) => {\n    if (!scanning) return;\n\n    try {\n      const response = await fetch(`/api/scan-status/${sid}`);\n      const data = await response.json();\n\n      if (data.status === 'complete' && data.modelUrl) {\n        setShowQR(false);\n        setScanning(false);\n        onModelUploaded(data.modelUrl);\n      } else if (data.status === 'processing') {\n        // Poll again in 3 seconds\n        setTimeout(() => pollForModel(sid), 3000);\n      }\n    } catch (error) {\n      console.error('Error checking scan status:', error);\n      setShowQR(false);\n      setScanning(false);\n    }\n  };\n\n  const getQRContent = () => {\n    // This URL should point to your iOS app's custom URL scheme\n    return `rosasdodeserto://scan/${sessionId}`;\n  };\n\n  return (\n    <div className=\"scan-button-container\">\n      <button\n        onClick={startScanning}\n        className=\"scan-button\"\n        disabled={scanning}\n      >\n        {scanning ? 'Scanning in progress...' : 'Scan New Object'}\n      </button>\n\n      {showQR && (\n        <div className=\"qr-modal\">\n          <div className=\"qr-content\">\n            <h3>Scan QR Code</h3>\n            <p>Open the Rosas do Deserto app to scan your object</p>\n            <QRCode value={getQRContent()} size={256} />\n            <button onClick={() => setShowQR(false)}>Close</button>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .scan-button-container {\n          position: fixed;\n          bottom: 2rem;\n          right: 2rem;\n          z-index: 1000;\n        }\n\n        .scan-button {\n          background: #2196F3;\n          color: white;\n          padding: 1rem 2rem;\n          border: none;\n          border-radius: 8px;\n          font-size: 1.1rem;\n          cursor: pointer;\n          transition: background 0.3s ease;\n        }\n\n        .scan-button:hover {\n          background: #1976D2;\n        }\n\n        .scan-button:disabled {\n          background: #90CAF9;\n          cursor: not-allowed;\n        }\n\n        .qr-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .qr-content {\n          background: white;\n          padding: 2rem;\n          border-radius: 12px;\n          text-align: center;\n        }\n\n        .qr-content h3 {\n          margin-top: 0;\n        }\n\n        .qr-content button {\n          margin-top: 1rem;\n          padding: 0.5rem 1rem;\n          background: #f44336;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ScanButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;IAC5DR,YAAY,CAACI,YAAY,CAAC;IAC1BN,SAAS,CAAC,IAAI,CAAC;IACfI,WAAW,CAAC,IAAI,CAAC;IACjBO,YAAY,CAACL,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMK,YAAY,GAAG,MAAOC,GAAG,IAAK;IAClC,IAAI,CAACT,QAAQ,EAAE;IAEf,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoBF,GAAG,EAAE,CAAC;MACvD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,MAAM,KAAK,UAAU,IAAIF,IAAI,CAACG,QAAQ,EAAE;QAC/ClB,SAAS,CAAC,KAAK,CAAC;QAChBI,WAAW,CAAC,KAAK,CAAC;QAClBP,eAAe,CAACkB,IAAI,CAACG,QAAQ,CAAC;MAChC,CAAC,MAAM,IAAIH,IAAI,CAACE,MAAM,KAAK,YAAY,EAAE;QACvC;QACAE,UAAU,CAAC,MAAMR,YAAY,CAACC,GAAG,CAAC,EAAE,IAAI,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDpB,SAAS,CAAC,KAAK,CAAC;MAChBI,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,OAAO,yBAAyBrB,SAAS,EAAE;EAC7C,CAAC;EAED,oBACEN,OAAA;IAAK4B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC7B,OAAA;MACE8B,OAAO,EAAEpB,aAAc;MACvBkB,SAAS,EAAC,aAAa;MACvBG,QAAQ,EAAEvB,QAAS;MAAAqB,QAAA,EAElBrB,QAAQ,GAAG,yBAAyB,GAAG;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,EAER/B,MAAM,iBACLJ,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvB7B,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAA6B,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBnC,OAAA;UAAA6B,QAAA,EAAG;QAAiD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxDnC,OAAA,CAACF,MAAM;UAACsC,KAAK,EAAET,YAAY,CAAC,CAAE;UAACU,IAAI,EAAE;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5CnC,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC,KAAK,CAAE;UAAAwB,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDnC,OAAA;MAAOsC,GAAG;MAAAT,QAAA,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAChC,EAAA,CA5HIF,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA8HhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}