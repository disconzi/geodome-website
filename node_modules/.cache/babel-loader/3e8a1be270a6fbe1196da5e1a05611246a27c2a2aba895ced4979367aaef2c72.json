{"ast":null,"code":"/* @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mesh, MeshBasicMaterial, SphereGeometry, Vector3 } from 'three';\nexport class GroundedSkybox extends Mesh {\n  constructor() {\n    super(undefined, new MeshBasicMaterial({\n      depthWrite: false\n    }));\n    this.height = 0;\n    this.radius = 0;\n    this.resolution = 0;\n    this.userData.noHit = true;\n  }\n  get map() {\n    return this.material.map;\n  }\n  set map(skybox) {\n    this.material.map = skybox;\n  }\n  isUsable() {\n    return this.height > 0 && this.radius > 0 && this.geometry != null && this.map != null;\n  }\n  updateGeometry(height = this.height, radius = this.radius, resolution = 128) {\n    if (height != this.height || radius != this.radius || resolution != this.resolution) {\n      this.height = height;\n      this.radius = radius;\n      this.resolution = resolution;\n      if (height > 0 && radius > 0) {\n        this.geometry.dispose();\n        this.geometry = makeGeometry(height, radius, resolution);\n      }\n    }\n  }\n}\nfunction makeGeometry(height, radius, resolution) {\n  const geometry = new SphereGeometry(radius, 2 * resolution, resolution);\n  geometry.scale(1, 1, -1);\n  const pos = geometry.getAttribute('position');\n  const tmp = new Vector3();\n  for (let i = 0; i < pos.count; ++i) {\n    tmp.fromBufferAttribute(pos, i);\n    if (tmp.y < 0) {\n      // Smooth out the transition from flat floor to sphere:\n      const y1 = -height * 3 / 2;\n      const f = tmp.y < y1 ? -height / tmp.y : 1 - tmp.y * tmp.y / (3 * y1 * y1);\n      tmp.multiplyScalar(f);\n      tmp.toArray(pos.array, 3 * i);\n    }\n  }\n  pos.needsUpdate = true;\n  return geometry;\n}","map":{"version":3,"names":["Mesh","MeshBasicMaterial","SphereGeometry","Vector3","GroundedSkybox","constructor","undefined","depthWrite","height","radius","resolution","userData","noHit","map","material","skybox","isUsable","geometry","updateGeometry","dispose","makeGeometry","scale","pos","getAttribute","tmp","i","count","fromBufferAttribute","y","y1","f","multiplyScalar","toArray","array","needsUpdate"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/node_modules/@google/model-viewer/src/three-components/GroundedSkybox.ts"],"sourcesContent":["/* @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BufferAttribute, Mesh, MeshBasicMaterial, SphereGeometry, Texture, Vector3} from 'three';\n\nexport class GroundedSkybox extends Mesh {\n  private height = 0;\n  private radius = 0;\n  private resolution = 0;\n\n  constructor() {\n    super(undefined, new MeshBasicMaterial({depthWrite: false}));\n    this.userData.noHit = true;\n  }\n\n  get map() {\n    return (this.material as MeshBasicMaterial).map;\n  }\n\n  set map(skybox: Texture|null) {\n    (this.material as MeshBasicMaterial).map = skybox;\n  }\n\n  isUsable() {\n    return this.height > 0 && this.radius > 0 && this.geometry != null &&\n        this.map != null;\n  }\n\n  updateGeometry(height = this.height, radius = this.radius, resolution = 128) {\n    if (height != this.height || radius != this.radius ||\n        resolution != this.resolution) {\n      this.height = height;\n      this.radius = radius;\n      this.resolution = resolution;\n      if (height > 0 && radius > 0) {\n        this.geometry.dispose();\n        this.geometry = makeGeometry(height, radius, resolution);\n      }\n    }\n  }\n}\n\nfunction makeGeometry(height: number, radius: number, resolution: number) {\n  const geometry = new SphereGeometry(radius, 2 * resolution, resolution);\n  geometry.scale(1, 1, -1);\n\n  const pos = geometry.getAttribute('position') as BufferAttribute;\n  const tmp = new Vector3();\n  for (let i = 0; i < pos.count; ++i) {\n    tmp.fromBufferAttribute(pos, i);\n    if (tmp.y < 0) {\n      // Smooth out the transition from flat floor to sphere:\n      const y1 = -height * 3 / 2;\n      const f =\n          tmp.y < y1 ? -height / tmp.y : (1 - tmp.y * tmp.y / (3 * y1 * y1));\n      tmp.multiplyScalar(f);\n      tmp.toArray(pos.array, 3 * i);\n    }\n  }\n  pos.needsUpdate = true;\n\n  return geometry;\n}"],"mappings":"AAAA;;;;;;;;;;;;;;AAeA,SAAyBA,IAAI,EAAEC,iBAAiB,EAAEC,cAAc,EAAWC,OAAO,QAAO,OAAO;AAEhG,OAAM,MAAOC,cAAe,SAAQJ,IAAI;EAKtCK,YAAA;IACE,KAAK,CAACC,SAAS,EAAE,IAAIL,iBAAiB,CAAC;MAACM,UAAU,EAAE;IAAK,CAAC,CAAC,CAAC;IALtD,KAAAC,MAAM,GAAG,CAAC;IACV,KAAAC,MAAM,GAAG,CAAC;IACV,KAAAC,UAAU,GAAG,CAAC;IAIpB,IAAI,CAACC,QAAQ,CAACC,KAAK,GAAG,IAAI;EAC5B;EAEA,IAAIC,GAAGA,CAAA;IACL,OAAQ,IAAI,CAACC,QAA8B,CAACD,GAAG;EACjD;EAEA,IAAIA,GAAGA,CAACE,MAAoB;IACzB,IAAI,CAACD,QAA8B,CAACD,GAAG,GAAGE,MAAM;EACnD;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,MAAM,GAAG,CAAC,IAAI,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACQ,QAAQ,IAAI,IAAI,IAC9D,IAAI,CAACJ,GAAG,IAAI,IAAI;EACtB;EAEAK,cAAcA,CAACV,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEC,UAAU,GAAG,GAAG;IACzE,IAAIF,MAAM,IAAI,IAAI,CAACA,MAAM,IAAIC,MAAM,IAAI,IAAI,CAACA,MAAM,IAC9CC,UAAU,IAAI,IAAI,CAACA,UAAU,EAAE;MACjC,IAAI,CAACF,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;MAC5B,IAAIF,MAAM,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC,EAAE;QAC5B,IAAI,CAACQ,QAAQ,CAACE,OAAO,EAAE;QACvB,IAAI,CAACF,QAAQ,GAAGG,YAAY,CAACZ,MAAM,EAAEC,MAAM,EAAEC,UAAU,CAAC;;;EAG9D;;AAGF,SAASU,YAAYA,CAACZ,MAAc,EAAEC,MAAc,EAAEC,UAAkB;EACtE,MAAMO,QAAQ,GAAG,IAAIf,cAAc,CAACO,MAAM,EAAE,CAAC,GAAGC,UAAU,EAAEA,UAAU,CAAC;EACvEO,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAExB,MAAMC,GAAG,GAAGL,QAAQ,CAACM,YAAY,CAAC,UAAU,CAAoB;EAChE,MAAMC,GAAG,GAAG,IAAIrB,OAAO,EAAE;EACzB,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,KAAK,EAAE,EAAED,CAAC,EAAE;IAClCD,GAAG,CAACG,mBAAmB,CAACL,GAAG,EAAEG,CAAC,CAAC;IAC/B,IAAID,GAAG,CAACI,CAAC,GAAG,CAAC,EAAE;MACb;MACA,MAAMC,EAAE,GAAG,CAACrB,MAAM,GAAG,CAAC,GAAG,CAAC;MAC1B,MAAMsB,CAAC,GACHN,GAAG,CAACI,CAAC,GAAGC,EAAE,GAAG,CAACrB,MAAM,GAAGgB,GAAG,CAACI,CAAC,GAAI,CAAC,GAAGJ,GAAG,CAACI,CAAC,GAAGJ,GAAG,CAACI,CAAC,IAAI,CAAC,GAAGC,EAAE,GAAGA,EAAE,CAAE;MACtEL,GAAG,CAACO,cAAc,CAACD,CAAC,CAAC;MACrBN,GAAG,CAACQ,OAAO,CAACV,GAAG,CAACW,KAAK,EAAE,CAAC,GAAGR,CAAC,CAAC;;;EAGjCH,GAAG,CAACY,WAAW,GAAG,IAAI;EAEtB,OAAOjB,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}