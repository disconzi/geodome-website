{"ast":null,"code":"import React,{Suspense,useState,useCallback}from'react';import{Canvas}from'@react-three/fiber';import{Environment,OrbitControls}from'@react-three/drei';import*as THREE from'three';import ScanButton from'./ScanButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DetailedGround=/*#__PURE__*/React.memo(function DetailedGround(){const grassPatches=useCallback(()=>[...Array(50)].map((_,i)=>{const x=Math.random()*30-15;const z=Math.random()*30-15;const scale=0.3+Math.random()*0.3;return{x,z,scale,rotation:Math.random()*Math.PI};}),[]);return/*#__PURE__*/_jsxs(\"group\",{children:[/*#__PURE__*/_jsx(Plane,{receiveShadow:true,rotation:[-Math.PI/2,0,0],position:[0,-0.1,0],args:[100,100],children:/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#4CAF50\",roughness:0.8,metalness:0.1})}),grassPatches().map((patch,i)=>/*#__PURE__*/_jsxs(\"mesh\",{position:[patch.x,-0.05,patch.z],rotation:[0,patch.rotation,0],scale:[patch.scale,patch.scale,patch.scale],children:[/*#__PURE__*/_jsx(\"planeGeometry\",{args:[0.3,0.5]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{color:\"#388E3C\",side:THREE.DoubleSide,transparent:true,opacity:0.7})]},i))]});});const Model=/*#__PURE__*/React.lazy(()=>import('./Model'));const BackgroundTrees=/*#__PURE__*/React.lazy(()=>import('./BackgroundTrees'));const CustomModel=/*#__PURE__*/React.lazy(()=>import('./CustomModel'));function ModelViewer(){const[isLoading,setIsLoading]=useState(true);const[scannedModelUrl,setScannedModelUrl]=useState(null);const canvasRef=useCallback(node=>{if(node!==null){setIsLoading(false);}},[]);const handleModelUploaded=modelUrl=>{setScannedModelUrl(modelUrl);};return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',height:'100vh',position:'relative'},children:[/*#__PURE__*/_jsx(Canvas,{ref:canvasRef,shadows:true,camera:{position:[0,5,15],fov:50},performance:{min:0.5},dpr:[1,2],children:/*#__PURE__*/_jsxs(Suspense,{fallback:null,children:[scannedModelUrl?/*#__PURE__*/_jsx(CustomModel,{url:scannedModelUrl}):/*#__PURE__*/_jsx(Model,{}),/*#__PURE__*/_jsx(DetailedGround,{}),/*#__PURE__*/_jsx(BackgroundTrees,{}),/*#__PURE__*/_jsx(Environment,{preset:\"sunset\"}),/*#__PURE__*/_jsx(OrbitControls,{enableDamping:false,maxPolarAngle:Math.PI/2})]})}),/*#__PURE__*/_jsx(ScanButton,{onModelUploaded:handleModelUploaded}),isLoading&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',background:'rgba(0, 0, 0, 0.7)',color:'white',padding:'1rem 2rem',borderRadius:'8px'},children:\"Loading...\"})]});}export default ModelViewer;","map":{"version":3,"names":["React","Suspense","useState","useCallback","Canvas","Environment","OrbitControls","THREE","ScanButton","jsx","_jsx","jsxs","_jsxs","DetailedGround","memo","grassPatches","Array","map","_","i","x","Math","random","z","scale","rotation","PI","children","Plane","receiveShadow","position","args","color","roughness","metalness","patch","side","DoubleSide","transparent","opacity","Model","lazy","BackgroundTrees","CustomModel","ModelViewer","isLoading","setIsLoading","scannedModelUrl","setScannedModelUrl","canvasRef","node","handleModelUploaded","modelUrl","style","width","height","ref","shadows","camera","fov","performance","min","dpr","fallback","url","preset","enableDamping","maxPolarAngle","onModelUploaded","top","left","transform","background","padding","borderRadius"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ModelViewer.js"],"sourcesContent":["import React, { Suspense, useState, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Environment, OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport ScanButton from './ScanButton';\n\nconst DetailedGround = React.memo(function DetailedGround() {\n  const grassPatches = useCallback(() => \n    [...Array(50)].map((_, i) => {\n      const x = Math.random() * 30 - 15;\n      const z = Math.random() * 30 - 15;\n      const scale = 0.3 + Math.random() * 0.3;\n      return { x, z, scale, rotation: Math.random() * Math.PI };\n    }), []\n  );\n\n  return (\n    <group>\n      <Plane\n        receiveShadow\n        rotation={[-Math.PI / 2, 0, 0]}\n        position={[0, -0.1, 0]}\n        args={[100, 100]}\n      >\n        <meshStandardMaterial\n          color=\"#4CAF50\"\n          roughness={0.8}\n          metalness={0.1}\n        />\n      </Plane>\n\n      {grassPatches().map((patch, i) => (\n        <mesh\n          key={i}\n          position={[patch.x, -0.05, patch.z]}\n          rotation={[0, patch.rotation, 0]}\n          scale={[patch.scale, patch.scale, patch.scale]}\n        >\n          <planeGeometry args={[0.3, 0.5]} />\n          <meshStandardMaterial \n            color=\"#388E3C\"\n            side={THREE.DoubleSide}\n            transparent\n            opacity={0.7}\n          />\n        </mesh>\n      ))}\n    </group>\n  );\n});\n\nconst Model = React.lazy(() => import('./Model'));\nconst BackgroundTrees = React.lazy(() => import('./BackgroundTrees'));\nconst CustomModel = React.lazy(() => import('./CustomModel'));\n\nfunction ModelViewer() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [scannedModelUrl, setScannedModelUrl] = useState(null);\n  \n  const canvasRef = useCallback(node => {\n    if (node !== null) {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleModelUploaded = (modelUrl) => {\n    setScannedModelUrl(modelUrl);\n  };\n\n  return (\n    <div style={{ width: '100%', height: '100vh', position: 'relative' }}>\n      <Canvas\n        ref={canvasRef}\n        shadows\n        camera={{ position: [0, 5, 15], fov: 50 }}\n        performance={{ min: 0.5 }}\n        dpr={[1, 2]}\n      >\n        <Suspense fallback={null}>\n          {scannedModelUrl ? (\n            <CustomModel url={scannedModelUrl} />\n          ) : (\n            <Model />\n          )}\n          <DetailedGround />\n          <BackgroundTrees />\n          <Environment preset=\"sunset\" />\n          <OrbitControls \n            enableDamping={false} \n            maxPolarAngle={Math.PI / 2} \n          />\n        </Suspense>\n      </Canvas>\n\n      <ScanButton onModelUploaded={handleModelUploaded} />\n\n      {isLoading && (\n        <div style={{ \n          position: 'absolute', \n          top: '50%', \n          left: '50%', \n          transform: 'translate(-50%, -50%)',\n          background: 'rgba(0, 0, 0, 0.7)',\n          color: 'white',\n          padding: '1rem 2rem',\n          borderRadius: '8px'\n        }}>\n          Loading...\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}