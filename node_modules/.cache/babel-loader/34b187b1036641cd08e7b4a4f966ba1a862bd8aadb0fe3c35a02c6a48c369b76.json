{"ast":null,"code":"var _jsxFileName = \"/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ARButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ARButton = ({\n  modelUrl\n}) => {\n  _s();\n  const [showQR, setShowQR] = useState(false);\n  const [anchorId, setAnchorId] = useState(null);\n  const handleSaveLocation = async () => {\n    if ('geolocation' in navigator) {\n      try {\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject);\n        });\n        let deviceOrientation = null;\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n          const permission = await DeviceOrientationEvent.requestPermission();\n          if (permission === 'granted') {\n            deviceOrientation = await new Promise(resolve => {\n              const handleOrientation = event => {\n                window.removeEventListener('deviceorientation', handleOrientation);\n                resolve({\n                  alpha: event.alpha,\n                  beta: event.beta,\n                  gamma: event.gamma\n                });\n              };\n              window.addEventListener('deviceorientation', handleOrientation);\n            });\n          }\n        }\n        const anchorData = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          orientation: deviceOrientation,\n          modelUrl,\n          timestamp: new Date().toISOString()\n        };\n        const response = await fetch('/api/save-ar-anchor', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(anchorData)\n        });\n        if (response.ok) {\n          const {\n            id\n          } = await response.json();\n          setAnchorId(id);\n          setShowQR(true);\n        }\n      } catch (error) {\n        console.error('Error saving location:', error);\n        alert('Erro ao salvar localização. Por favor, permita acesso à localização.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveLocation,\n      style: {\n        backgroundColor: '#10b981',\n        color: 'white',\n        padding: '12px 24px',\n        borderRadius: '8px',\n        border: 'none',\n        fontSize: '16px',\n        fontWeight: '500',\n        width: '100%',\n        marginTop: '12px',\n        cursor: 'pointer'\n      },\n      children: \"Salvar Localiza\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), showQR && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '24px',\n          borderRadius: '12px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          value: `${window.location.origin}/ar-view/${anchorId}`,\n          size: 200,\n          level: \"H\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '12px',\n            color: '#374151'\n          },\n          children: \"Escaneie para ver neste local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowQR(false),\n          style: {\n            marginTop: '12px',\n            padding: '8px 16px',\n            backgroundColor: '#f3f4f6',\n            border: 'none',\n            borderRadius: '6px',\n            color: '#374151',\n            width: '100%',\n            cursor: 'pointer'\n          },\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ARButton, \"NWDebGKtqTmbPc6JiTPaCfNe9Hw=\");\n_c = ARButton;\nexport default ARButton;\nvar _c;\n$RefreshReg$(_c, \"ARButton\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","ARButton","modelUrl","_s","showQR","setShowQR","anchorId","setAnchorId","handleSaveLocation","navigator","position","Promise","resolve","reject","geolocation","getCurrentPosition","deviceOrientation","DeviceOrientationEvent","requestPermission","permission","handleOrientation","event","window","removeEventListener","alpha","beta","gamma","addEventListener","anchorData","lat","coords","latitude","lng","longitude","orientation","timestamp","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","id","json","error","console","alert","children","onClick","style","backgroundColor","color","padding","borderRadius","border","fontSize","fontWeight","width","marginTop","cursor","fileName","_jsxFileName","lineNumber","columnNumber","top","left","right","bottom","display","alignItems","justifyContent","zIndex","textAlign","value","location","origin","size","level","_c","$RefreshReg$"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ARButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\n\nconst ARButton = ({ modelUrl }) => {\n  const [showQR, setShowQR] = useState(false);\n  const [anchorId, setAnchorId] = useState(null);\n\n  const handleSaveLocation = async () => {\n    if ('geolocation' in navigator) {\n      try {\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject);\n        });\n        \n        let deviceOrientation = null;\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n          const permission = await DeviceOrientationEvent.requestPermission();\n          if (permission === 'granted') {\n            deviceOrientation = await new Promise(resolve => {\n              const handleOrientation = (event) => {\n                window.removeEventListener('deviceorientation', handleOrientation);\n                resolve({\n                  alpha: event.alpha,\n                  beta: event.beta,\n                  gamma: event.gamma\n                });\n              };\n              window.addEventListener('deviceorientation', handleOrientation);\n            });\n          }\n        }\n\n        const anchorData = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          orientation: deviceOrientation,\n          modelUrl,\n          timestamp: new Date().toISOString()\n        };\n\n        const response = await fetch('/api/save-ar-anchor', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(anchorData),\n        });\n\n        if (response.ok) {\n          const { id } = await response.json();\n          setAnchorId(id);\n          setShowQR(true);\n        }\n      } catch (error) {\n        console.error('Error saving location:', error);\n        alert('Erro ao salvar localização. Por favor, permita acesso à localização.');\n      }\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={handleSaveLocation}\n        style={{\n          backgroundColor: '#10b981',\n          color: 'white',\n          padding: '12px 24px',\n          borderRadius: '8px',\n          border: 'none',\n          fontSize: '16px',\n          fontWeight: '500',\n          width: '100%',\n          marginTop: '12px',\n          cursor: 'pointer'\n        }}\n      >\n        Salvar Localização\n      </button>\n\n      {showQR && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 1000\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: 'white',\n              padding: '24px',\n              borderRadius: '12px',\n              textAlign: 'center'\n            }}\n          >\n            <QRCode\n              value={`${window.location.origin}/ar-view/${anchorId}`}\n              size={200}\n              level=\"H\"\n            />\n            <p style={{ marginTop: '12px', color: '#374151' }}>\n              Escaneie para ver neste local\n            </p>\n            <button\n              onClick={() => setShowQR(false)}\n              style={{\n                marginTop: '12px',\n                padding: '8px 16px',\n                backgroundColor: '#f3f4f6',\n                border: 'none',\n                borderRadius: '6px',\n                color: '#374151',\n                width: '100%',\n                cursor: 'pointer'\n              }}\n            >\n              Fechar\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ARButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}