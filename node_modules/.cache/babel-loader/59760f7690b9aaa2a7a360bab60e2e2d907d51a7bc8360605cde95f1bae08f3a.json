{"ast":null,"code":"export const getARUrl = async modelUrl => {\n  try {\n    // First check if USDZ file already exists\n    const usdzUrl = modelUrl.replace('.glb', '.usdz');\n    const response = await fetch(usdzUrl, {\n      method: 'HEAD'\n    });\n    if (response.ok) {\n      return usdzUrl;\n    }\n\n    // If USDZ file doesn't exist, convert it\n    const convertResponse = await fetch('/api/convert-to-reality', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        glbPath: modelUrl\n      })\n    });\n    if (!convertResponse.ok) {\n      throw new Error('Failed to convert file');\n    }\n    const {\n      usdzPath\n    } = await convertResponse.json();\n    return usdzPath;\n  } catch (error) {\n    console.error('Error getting AR URL:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getARUrl","modelUrl","usdzUrl","replace","response","fetch","method","ok","convertResponse","headers","body","JSON","stringify","glbPath","Error","usdzPath","json","error","console"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/utils/arUtils.js"],"sourcesContent":["export const getARUrl = async (modelUrl) => {\n  try {\n    // First check if USDZ file already exists\n    const usdzUrl = modelUrl.replace('.glb', '.usdz');\n    const response = await fetch(usdzUrl, { method: 'HEAD' });\n    \n    if (response.ok) {\n      return usdzUrl;\n    }\n\n    // If USDZ file doesn't exist, convert it\n    const convertResponse = await fetch('/api/convert-to-reality', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ glbPath: modelUrl }),\n    });\n\n    if (!convertResponse.ok) {\n      throw new Error('Failed to convert file');\n    }\n\n    const { usdzPath } = await convertResponse.json();\n    return usdzPath;\n  } catch (error) {\n    console.error('Error getting AR URL:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF;IACA,MAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;IACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MAAEI,MAAM,EAAE;IAAO,CAAC,CAAC;IAEzD,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf,OAAOL,OAAO;IAChB;;IAEA;IACA,MAAMM,eAAe,GAAG,MAAMH,KAAK,CAAC,yBAAyB,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEZ;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAI,CAACO,eAAe,CAACD,EAAE,EAAE;MACvB,MAAM,IAAIO,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAM;MAAEC;IAAS,CAAC,GAAG,MAAMP,eAAe,CAACQ,IAAI,CAAC,CAAC;IACjD,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}