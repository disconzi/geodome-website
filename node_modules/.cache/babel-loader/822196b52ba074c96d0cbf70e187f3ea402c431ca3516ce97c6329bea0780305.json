{"ast":null,"code":"import React,{useEffect,useRef}from'react';import*as THREE from'three';import{jsx as _jsx}from\"react/jsx-runtime\";const MorphingGeometry=()=>{const mountRef=useRef(null);const frameRef=useRef(null);useEffect(()=>{let particles=[];const particleCount=20000;const domeRadius=120;const domeHeight=70;const frameThickness=2;const scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);const renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});const width=mountRef.current.clientWidth;const height=mountRef.current.clientHeight;renderer.setSize(width,height);mountRef.current.appendChild(renderer.domElement);camera.position.set(0,40,300);camera.lookAt(0,0,0);const createFrames=()=>{const frameGeometry=new THREE.BufferGeometry();const framePositions=[];const frameColor=new THREE.Color(0xd35400);const rings=[Math.PI/6,Math.PI/3,Math.PI/2];rings.forEach(phi=>{for(let theta=0;theta<Math.PI*2;theta+=0.1){const x1=domeRadius*Math.sin(phi)*Math.cos(theta);const y1=domeHeight/90*domeRadius*Math.cos(phi);const z1=domeRadius*Math.sin(phi)*Math.sin(theta);const x2=domeRadius*Math.sin(phi)*Math.cos(theta+0.1);const y2=domeHeight/90*domeRadius*Math.cos(phi);const z2=domeRadius*Math.sin(phi)*Math.sin(theta+0.1);framePositions.push(x1,y1,z1);framePositions.push(x2,y2,z2);}});const verticalCount=10;for(let i=0;i<verticalCount;i++){const theta=i*Math.PI*2/verticalCount;for(let phi=0;phi<Math.PI/2;phi+=0.1){const x1=domeRadius*Math.sin(phi)*Math.cos(theta);const y1=domeHeight/90*domeRadius*Math.cos(phi);const z1=domeRadius*Math.sin(phi)*Math.sin(theta);const x2=domeRadius*Math.sin(phi+0.1)*Math.cos(theta);const y2=domeHeight/90*domeRadius*Math.cos(phi+0.1);const z2=domeRadius*Math.sin(phi+0.1)*Math.sin(theta);framePositions.push(x1,y1,z1);framePositions.push(x2,y2,z2);}}frameGeometry.setAttribute('position',new THREE.Float32BufferAttribute(framePositions,3));const frameMaterial=new THREE.LineBasicMaterial({color:frameColor,linewidth:2,transparent:true,opacity:0.8});const frameLines=new THREE.LineSegments(frameGeometry,frameMaterial);scene.add(frameLines);return frameLines;};const frames=createFrames();const createParticles=()=>{const geometry=new THREE.BufferGeometry();const positions=[];const colors=[];const frameColor=new THREE.Color(0xd35400);const glassColor=new THREE.Color(0x95a5a6);const isOnFrame=(theta,phi)=>{const rings=[Math.PI/6,Math.PI/3,Math.PI/2];for(let ring of rings){if(Math.abs(phi-ring)<frameThickness/domeRadius)return true;}const verticalCount=10;for(let i=0;i<verticalCount;i++){const frameTheta=i*Math.PI*2/verticalCount;if(Math.abs((theta+Math.PI*2)%(Math.PI*2)-frameTheta)<frameThickness/domeRadius)return true;}return false;};for(let i=0;i<particleCount;i++){const theta=THREE.MathUtils.randFloat(0,Math.PI*2);const phi=THREE.MathUtils.randFloat(0,Math.PI/2);const radius=domeRadius+THREE.MathUtils.randFloat(-2,2);const x=radius*Math.sin(phi)*Math.cos(theta);const y=domeHeight/90*radius*Math.cos(phi);const z=radius*Math.sin(phi)*Math.sin(theta);if(y<5&&Math.sqrt(x*x+z*z)<domeRadius*1.2){positions.push(x,0,z);colors.push(0.6,0.3,0.1);particles.push({position:new THREE.Vector3(x,0,z),originalPosition:new THREE.Vector3(x,0,z),velocity:new THREE.Vector3(0,0,0)});continue;}positions.push(x,y,z);const isFrame=isOnFrame(theta,phi);const color=isFrame?frameColor:glassColor;colors.push(color.r,color.g,color.b);particles.push({position:new THREE.Vector3(x,y,z),originalPosition:new THREE.Vector3(x,y,z),velocity:new THREE.Vector3(0,0,0)});}geometry.setAttribute('position',new THREE.Float32BufferAttribute(positions,3));geometry.setAttribute('color',new THREE.Float32BufferAttribute(colors,3));const material=new THREE.PointsMaterial({size:0.6,vertexColors:true,transparent:true,opacity:0.9});const points=new THREE.Points(geometry,material);scene.add(points);return{geometry,points};};const{geometry,points}=createParticles();const mouse=new THREE.Vector2();const mouseRadius=30;const mouseStrength=40;const handleMouseMove=event=>{const rect=mountRef.current.getBoundingClientRect();mouse.x=(event.clientX-rect.left)/width*2-1;mouse.y=-((event.clientY-rect.top)/height)*2+1;const vector=new THREE.Vector3(mouse.x,mouse.y,0);vector.unproject(camera);const dir=vector.sub(camera.position).normalize();const distance=-camera.position.z/dir.z;const pos=camera.position.clone().add(dir.multiplyScalar(distance));particles.forEach((particle,i)=>{const distance=particle.position.distanceTo(pos);if(distance<mouseRadius){const force=(mouseRadius-distance)/mouseRadius;const repulsion=pos.clone().sub(particle.position).normalize().multiplyScalar(-force*mouseStrength);particle.velocity.add(repulsion);}});};const animate=()=>{frameRef.current=requestAnimationFrame(animate);particles.forEach((particle,i)=>{particle.position.add(particle.velocity);const direction=particle.originalPosition.clone().sub(particle.position);const distance=direction.length();if(distance>0.1){direction.normalize().multiplyScalar(0.2);particle.velocity.add(direction);}particle.velocity.multiplyScalar(0.85);geometry.attributes.position.array[i*3]=particle.position.x;geometry.attributes.position.array[i*3+1]=particle.position.y;geometry.attributes.position.array[i*3+2]=particle.position.z;});geometry.attributes.position.needsUpdate=true;points.rotation.y+=0.0003;frames.rotation.y+=0.0003;renderer.render(scene,camera);};animate();window.addEventListener('resize',handleResize);mountRef.current.addEventListener('mousemove',handleMouseMove);function handleResize(){const width=mountRef.current.clientWidth;const height=mountRef.current.clientHeight;camera.aspect=width/height;camera.updateProjectionMatrix();renderer.setSize(width,height);}return()=>{window.removeEventListener('resize',handleResize);mountRef.current.removeEventListener('mousemove',handleMouseMove);cancelAnimationFrame(frameRef.current);mountRef.current.removeChild(renderer.domElement);};},[]);return/*#__PURE__*/_jsx(\"div\",{ref:mountRef,style:{width:'100%',height:'600px'}});};export default MorphingGeometry;","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsx","_jsx","MorphingGeometry","mountRef","frameRef","particles","particleCount","domeRadius","domeHeight","frameThickness","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","width","current","clientWidth","height","clientHeight","setSize","appendChild","domElement","position","set","lookAt","createFrames","frameGeometry","BufferGeometry","framePositions","frameColor","Color","rings","Math","PI","forEach","phi","theta","x1","sin","cos","y1","z1","x2","y2","z2","push","verticalCount","i","setAttribute","Float32BufferAttribute","frameMaterial","LineBasicMaterial","color","linewidth","transparent","opacity","frameLines","LineSegments","add","frames","createParticles","geometry","positions","colors","glassColor","isOnFrame","ring","abs","frameTheta","MathUtils","randFloat","radius","x","y","z","sqrt","Vector3","originalPosition","velocity","isFrame","r","g","b","material","PointsMaterial","size","vertexColors","points","Points","mouse","Vector2","mouseRadius","mouseStrength","handleMouseMove","event","rect","getBoundingClientRect","clientX","left","clientY","top","vector","unproject","dir","sub","normalize","distance","pos","clone","multiplyScalar","particle","distanceTo","force","repulsion","animate","requestAnimationFrame","direction","length","attributes","array","needsUpdate","rotation","render","addEventListener","handleResize","aspect","updateProjectionMatrix","removeEventListener","cancelAnimationFrame","removeChild","ref","style"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/MorphingGeometry.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst MorphingGeometry = () => {\n  const mountRef = useRef(null);\n  const frameRef = useRef(null);\n\n  useEffect(() => {\n    let particles = [];\n    const particleCount = 20000;\n    const domeRadius = 120;\n    const domeHeight = 70; \n    const frameThickness = 2;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    \n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n\n    camera.position.set(0, 40, 300);\n    camera.lookAt(0, 0, 0);\n\n    const createFrames = () => {\n      const frameGeometry = new THREE.BufferGeometry();\n      const framePositions = [];\n      const frameColor = new THREE.Color(0xd35400);\n\n      const rings = [Math.PI/6, Math.PI/3, Math.PI/2];\n      rings.forEach(phi => {\n        for (let theta = 0; theta < Math.PI * 2; theta += 0.1) {\n          const x1 = domeRadius * Math.sin(phi) * Math.cos(theta);\n          const y1 = (domeHeight/90) * domeRadius * Math.cos(phi);\n          const z1 = domeRadius * Math.sin(phi) * Math.sin(theta);\n\n          const x2 = domeRadius * Math.sin(phi) * Math.cos(theta + 0.1);\n          const y2 = (domeHeight/90) * domeRadius * Math.cos(phi);\n          const z2 = domeRadius * Math.sin(phi) * Math.sin(theta + 0.1);\n\n          framePositions.push(x1, y1, z1);\n          framePositions.push(x2, y2, z2);\n        }\n      });\n\n      const verticalCount = 10;\n      for (let i = 0; i < verticalCount; i++) {\n        const theta = (i * Math.PI * 2) / verticalCount;\n        for (let phi = 0; phi < Math.PI/2; phi += 0.1) {\n          const x1 = domeRadius * Math.sin(phi) * Math.cos(theta);\n          const y1 = (domeHeight/90) * domeRadius * Math.cos(phi);\n          const z1 = domeRadius * Math.sin(phi) * Math.sin(theta);\n\n          const x2 = domeRadius * Math.sin(phi + 0.1) * Math.cos(theta);\n          const y2 = (domeHeight/90) * domeRadius * Math.cos(phi + 0.1);\n          const z2 = domeRadius * Math.sin(phi + 0.1) * Math.sin(theta);\n\n          framePositions.push(x1, y1, z1);\n          framePositions.push(x2, y2, z2);\n        }\n      }\n\n      frameGeometry.setAttribute('position', new THREE.Float32BufferAttribute(framePositions, 3));\n      \n      const frameMaterial = new THREE.LineBasicMaterial({ \n        color: frameColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.8\n      });\n\n      const frameLines = new THREE.LineSegments(frameGeometry, frameMaterial);\n      scene.add(frameLines);\n\n      return frameLines;\n    };\n\n    const frames = createFrames();\n\n    const createParticles = () => {\n      const geometry = new THREE.BufferGeometry();\n      const positions = [];\n      const colors = [];\n\n      const frameColor = new THREE.Color(0xd35400);\n      const glassColor = new THREE.Color(0x95a5a6);\n\n      const isOnFrame = (theta, phi) => {\n        const rings = [Math.PI/6, Math.PI/3, Math.PI/2];\n        for (let ring of rings) {\n          if (Math.abs(phi - ring) < frameThickness/domeRadius) return true;\n        }\n\n        const verticalCount = 10;\n        for (let i = 0; i < verticalCount; i++) {\n          const frameTheta = (i * Math.PI * 2) / verticalCount;\n          if (Math.abs(((theta + Math.PI * 2) % (Math.PI * 2)) - frameTheta) < frameThickness/domeRadius) return true;\n        }\n\n        return false;\n      };\n\n      for (let i = 0; i < particleCount; i++) {\n        const theta = THREE.MathUtils.randFloat(0, Math.PI * 2);\n        const phi = THREE.MathUtils.randFloat(0, Math.PI / 2);\n        const radius = domeRadius + THREE.MathUtils.randFloat(-2, 2);\n\n        const x = radius * Math.sin(phi) * Math.cos(theta);\n        const y = (domeHeight/90) * radius * Math.cos(phi); \n        const z = radius * Math.sin(phi) * Math.sin(theta);\n\n        if (y < 5 && Math.sqrt(x*x + z*z) < domeRadius * 1.2) {\n          positions.push(x, 0, z);\n          colors.push(0.6, 0.3, 0.1);\n          particles.push({\n            position: new THREE.Vector3(x, 0, z),\n            originalPosition: new THREE.Vector3(x, 0, z),\n            velocity: new THREE.Vector3(0, 0, 0)\n          });\n          continue;\n        }\n\n        positions.push(x, y, z);\n\n        const isFrame = isOnFrame(theta, phi);\n        const color = isFrame ? frameColor : glassColor;\n        colors.push(color.r, color.g, color.b);\n\n        particles.push({\n          position: new THREE.Vector3(x, y, z),\n          originalPosition: new THREE.Vector3(x, y, z),\n          velocity: new THREE.Vector3(0, 0, 0)\n        });\n      }\n\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n      geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n\n      const material = new THREE.PointsMaterial({\n        size: 0.6,\n        vertexColors: true,\n        transparent: true,\n        opacity: 0.9,\n      });\n\n      const points = new THREE.Points(geometry, material);\n      scene.add(points);\n\n      return { geometry, points };\n    };\n\n    const { geometry, points } = createParticles();\n\n    const mouse = new THREE.Vector2();\n    const mouseRadius = 30;\n    const mouseStrength = 40; \n\n    const handleMouseMove = (event) => {\n      const rect = mountRef.current.getBoundingClientRect();\n      mouse.x = ((event.clientX - rect.left) / width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / height) * 2 + 1;\n\n      const vector = new THREE.Vector3(mouse.x, mouse.y, 0);\n      vector.unproject(camera);\n      const dir = vector.sub(camera.position).normalize();\n      const distance = -camera.position.z / dir.z;\n      const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n\n      particles.forEach((particle, i) => {\n        const distance = particle.position.distanceTo(pos);\n        if (distance < mouseRadius) {\n          const force = (mouseRadius - distance) / mouseRadius;\n          const repulsion = pos.clone().sub(particle.position).normalize().multiplyScalar(-force * mouseStrength);\n          particle.velocity.add(repulsion);\n        }\n      });\n    };\n\n    const animate = () => {\n      frameRef.current = requestAnimationFrame(animate);\n\n      particles.forEach((particle, i) => {\n        particle.position.add(particle.velocity);\n\n        const direction = particle.originalPosition.clone().sub(particle.position);\n        const distance = direction.length();\n        if (distance > 0.1) {\n          direction.normalize().multiplyScalar(0.2); \n          particle.velocity.add(direction);\n        }\n\n        particle.velocity.multiplyScalar(0.85); \n\n        geometry.attributes.position.array[i * 3] = particle.position.x;\n        geometry.attributes.position.array[i * 3 + 1] = particle.position.y;\n        geometry.attributes.position.array[i * 3 + 2] = particle.position.z;\n      });\n\n      geometry.attributes.position.needsUpdate = true;\n      points.rotation.y += 0.0003;\n      frames.rotation.y += 0.0003;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    window.addEventListener('resize', handleResize);\n    mountRef.current.addEventListener('mousemove', handleMouseMove);\n\n    function handleResize() {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      \n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    }\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(frameRef.current);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '600px' }} />;\n};\n\nexport default MorphingGeometry;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/B,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,QAAQ,CAAGL,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAM,QAAQ,CAAGN,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACd,GAAI,CAAAQ,SAAS,CAAG,EAAE,CAClB,KAAM,CAAAC,aAAa,CAAG,KAAK,CAC3B,KAAM,CAAAC,UAAU,CAAG,GAAG,CACtB,KAAM,CAAAC,UAAU,CAAG,EAAE,CACrB,KAAM,CAAAC,cAAc,CAAG,CAAC,CAExB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAX,KAAK,CAACY,KAAK,CAAC,CAAC,CAC/B,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAb,KAAK,CAACc,iBAAiB,CAAC,EAAE,CAAEC,MAAM,CAACC,UAAU,CAAGD,MAAM,CAACE,WAAW,CAAE,GAAG,CAAE,IAAI,CAAC,CACjG,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAlB,KAAK,CAACmB,aAAa,CAAC,CAAEC,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAE1E,KAAM,CAAAC,KAAK,CAAGlB,QAAQ,CAACmB,OAAO,CAACC,WAAW,CAC1C,KAAM,CAAAC,MAAM,CAAGrB,QAAQ,CAACmB,OAAO,CAACG,YAAY,CAC5CR,QAAQ,CAACS,OAAO,CAACL,KAAK,CAAEG,MAAM,CAAC,CAC/BrB,QAAQ,CAACmB,OAAO,CAACK,WAAW,CAACV,QAAQ,CAACW,UAAU,CAAC,CAEjDhB,MAAM,CAACiB,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAE,EAAE,CAAE,GAAG,CAAC,CAC/BlB,MAAM,CAACmB,MAAM,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAEtB,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAlC,KAAK,CAACmC,cAAc,CAAC,CAAC,CAChD,KAAM,CAAAC,cAAc,CAAG,EAAE,CACzB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAArC,KAAK,CAACsC,KAAK,CAAC,QAAQ,CAAC,CAE5C,KAAM,CAAAC,KAAK,CAAG,CAACC,IAAI,CAACC,EAAE,CAAC,CAAC,CAAED,IAAI,CAACC,EAAE,CAAC,CAAC,CAAED,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC,CAC/CF,KAAK,CAACG,OAAO,CAACC,GAAG,EAAI,CACnB,IAAK,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAEA,KAAK,CAAGJ,IAAI,CAACC,EAAE,CAAG,CAAC,CAAEG,KAAK,EAAI,GAAG,CAAE,CACrD,KAAM,CAAAC,EAAE,CAAGrC,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACO,GAAG,CAACH,KAAK,CAAC,CACvD,KAAM,CAAAI,EAAE,CAAIvC,UAAU,CAAC,EAAE,CAAID,UAAU,CAAGgC,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,CACvD,KAAM,CAAAM,EAAE,CAAGzC,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACM,GAAG,CAACF,KAAK,CAAC,CAEvD,KAAM,CAAAM,EAAE,CAAG1C,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACO,GAAG,CAACH,KAAK,CAAG,GAAG,CAAC,CAC7D,KAAM,CAAAO,EAAE,CAAI1C,UAAU,CAAC,EAAE,CAAID,UAAU,CAAGgC,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,CACvD,KAAM,CAAAS,EAAE,CAAG5C,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACM,GAAG,CAACF,KAAK,CAAG,GAAG,CAAC,CAE7DR,cAAc,CAACiB,IAAI,CAACR,EAAE,CAAEG,EAAE,CAAEC,EAAE,CAAC,CAC/Bb,cAAc,CAACiB,IAAI,CAACH,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CACjC,CACF,CAAC,CAAC,CAEF,KAAM,CAAAE,aAAa,CAAG,EAAE,CACxB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,aAAa,CAAEC,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAX,KAAK,CAAIW,CAAC,CAAGf,IAAI,CAACC,EAAE,CAAG,CAAC,CAAIa,aAAa,CAC/C,IAAK,GAAI,CAAAX,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAGH,IAAI,CAACC,EAAE,CAAC,CAAC,CAAEE,GAAG,EAAI,GAAG,CAAE,CAC7C,KAAM,CAAAE,EAAE,CAAGrC,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACO,GAAG,CAACH,KAAK,CAAC,CACvD,KAAM,CAAAI,EAAE,CAAIvC,UAAU,CAAC,EAAE,CAAID,UAAU,CAAGgC,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,CACvD,KAAM,CAAAM,EAAE,CAAGzC,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACM,GAAG,CAACF,KAAK,CAAC,CAEvD,KAAM,CAAAM,EAAE,CAAG1C,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAG,GAAG,CAAC,CAAGH,IAAI,CAACO,GAAG,CAACH,KAAK,CAAC,CAC7D,KAAM,CAAAO,EAAE,CAAI1C,UAAU,CAAC,EAAE,CAAID,UAAU,CAAGgC,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAG,GAAG,CAAC,CAC7D,KAAM,CAAAS,EAAE,CAAG5C,UAAU,CAAGgC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAG,GAAG,CAAC,CAAGH,IAAI,CAACM,GAAG,CAACF,KAAK,CAAC,CAE7DR,cAAc,CAACiB,IAAI,CAACR,EAAE,CAAEG,EAAE,CAAEC,EAAE,CAAC,CAC/Bb,cAAc,CAACiB,IAAI,CAACH,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CACjC,CACF,CAEAlB,aAAa,CAACsB,YAAY,CAAC,UAAU,CAAE,GAAI,CAAAxD,KAAK,CAACyD,sBAAsB,CAACrB,cAAc,CAAE,CAAC,CAAC,CAAC,CAE3F,KAAM,CAAAsB,aAAa,CAAG,GAAI,CAAA1D,KAAK,CAAC2D,iBAAiB,CAAC,CAChDC,KAAK,CAAEvB,UAAU,CACjBwB,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,IAAI,CACjBC,OAAO,CAAE,GACX,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAhE,KAAK,CAACiE,YAAY,CAAC/B,aAAa,CAAEwB,aAAa,CAAC,CACvE/C,KAAK,CAACuD,GAAG,CAACF,UAAU,CAAC,CAErB,MAAO,CAAAA,UAAU,CACnB,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGlC,YAAY,CAAC,CAAC,CAE7B,KAAM,CAAAmC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAArE,KAAK,CAACmC,cAAc,CAAC,CAAC,CAC3C,KAAM,CAAAmC,SAAS,CAAG,EAAE,CACpB,KAAM,CAAAC,MAAM,CAAG,EAAE,CAEjB,KAAM,CAAAlC,UAAU,CAAG,GAAI,CAAArC,KAAK,CAACsC,KAAK,CAAC,QAAQ,CAAC,CAC5C,KAAM,CAAAkC,UAAU,CAAG,GAAI,CAAAxE,KAAK,CAACsC,KAAK,CAAC,QAAQ,CAAC,CAE5C,KAAM,CAAAmC,SAAS,CAAGA,CAAC7B,KAAK,CAAED,GAAG,GAAK,CAChC,KAAM,CAAAJ,KAAK,CAAG,CAACC,IAAI,CAACC,EAAE,CAAC,CAAC,CAAED,IAAI,CAACC,EAAE,CAAC,CAAC,CAAED,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC,CAC/C,IAAK,GAAI,CAAAiC,IAAI,GAAI,CAAAnC,KAAK,CAAE,CACtB,GAAIC,IAAI,CAACmC,GAAG,CAAChC,GAAG,CAAG+B,IAAI,CAAC,CAAGhE,cAAc,CAACF,UAAU,CAAE,MAAO,KAAI,CACnE,CAEA,KAAM,CAAA8C,aAAa,CAAG,EAAE,CACxB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,aAAa,CAAEC,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAqB,UAAU,CAAIrB,CAAC,CAAGf,IAAI,CAACC,EAAE,CAAG,CAAC,CAAIa,aAAa,CACpD,GAAId,IAAI,CAACmC,GAAG,CAAE,CAAC/B,KAAK,CAAGJ,IAAI,CAACC,EAAE,CAAG,CAAC,GAAKD,IAAI,CAACC,EAAE,CAAG,CAAC,CAAC,CAAImC,UAAU,CAAC,CAAGlE,cAAc,CAACF,UAAU,CAAE,MAAO,KAAI,CAC7G,CAEA,MAAO,MAAK,CACd,CAAC,CAED,IAAK,GAAI,CAAA+C,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGhD,aAAa,CAAEgD,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAX,KAAK,CAAG5C,KAAK,CAAC6E,SAAS,CAACC,SAAS,CAAC,CAAC,CAAEtC,IAAI,CAACC,EAAE,CAAG,CAAC,CAAC,CACvD,KAAM,CAAAE,GAAG,CAAG3C,KAAK,CAAC6E,SAAS,CAACC,SAAS,CAAC,CAAC,CAAEtC,IAAI,CAACC,EAAE,CAAG,CAAC,CAAC,CACrD,KAAM,CAAAsC,MAAM,CAAGvE,UAAU,CAAGR,KAAK,CAAC6E,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAE5D,KAAM,CAAAE,CAAC,CAAGD,MAAM,CAAGvC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACO,GAAG,CAACH,KAAK,CAAC,CAClD,KAAM,CAAAqC,CAAC,CAAIxE,UAAU,CAAC,EAAE,CAAIsE,MAAM,CAAGvC,IAAI,CAACO,GAAG,CAACJ,GAAG,CAAC,CAClD,KAAM,CAAAuC,CAAC,CAAGH,MAAM,CAAGvC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,CAAGH,IAAI,CAACM,GAAG,CAACF,KAAK,CAAC,CAElD,GAAIqC,CAAC,CAAG,CAAC,EAAIzC,IAAI,CAAC2C,IAAI,CAACH,CAAC,CAACA,CAAC,CAAGE,CAAC,CAACA,CAAC,CAAC,CAAG1E,UAAU,CAAG,GAAG,CAAE,CACpD8D,SAAS,CAACjB,IAAI,CAAC2B,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAC,CACvBX,MAAM,CAAClB,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CAC1B/C,SAAS,CAAC+C,IAAI,CAAC,CACbvB,QAAQ,CAAE,GAAI,CAAA9B,KAAK,CAACoF,OAAO,CAACJ,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAC,CACpCG,gBAAgB,CAAE,GAAI,CAAArF,KAAK,CAACoF,OAAO,CAACJ,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAC,CAC5CI,QAAQ,CAAE,GAAI,CAAAtF,KAAK,CAACoF,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACrC,CAAC,CAAC,CACF,SACF,CAEAd,SAAS,CAACjB,IAAI,CAAC2B,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAEvB,KAAM,CAAAK,OAAO,CAAGd,SAAS,CAAC7B,KAAK,CAAED,GAAG,CAAC,CACrC,KAAM,CAAAiB,KAAK,CAAG2B,OAAO,CAAGlD,UAAU,CAAGmC,UAAU,CAC/CD,MAAM,CAAClB,IAAI,CAACO,KAAK,CAAC4B,CAAC,CAAE5B,KAAK,CAAC6B,CAAC,CAAE7B,KAAK,CAAC8B,CAAC,CAAC,CAEtCpF,SAAS,CAAC+C,IAAI,CAAC,CACbvB,QAAQ,CAAE,GAAI,CAAA9B,KAAK,CAACoF,OAAO,CAACJ,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CACpCG,gBAAgB,CAAE,GAAI,CAAArF,KAAK,CAACoF,OAAO,CAACJ,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAC5CI,QAAQ,CAAE,GAAI,CAAAtF,KAAK,CAACoF,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACrC,CAAC,CAAC,CACJ,CAEAf,QAAQ,CAACb,YAAY,CAAC,UAAU,CAAE,GAAI,CAAAxD,KAAK,CAACyD,sBAAsB,CAACa,SAAS,CAAE,CAAC,CAAC,CAAC,CACjFD,QAAQ,CAACb,YAAY,CAAC,OAAO,CAAE,GAAI,CAAAxD,KAAK,CAACyD,sBAAsB,CAACc,MAAM,CAAE,CAAC,CAAC,CAAC,CAE3E,KAAM,CAAAoB,QAAQ,CAAG,GAAI,CAAA3F,KAAK,CAAC4F,cAAc,CAAC,CACxCC,IAAI,CAAE,GAAG,CACTC,YAAY,CAAE,IAAI,CAClBhC,WAAW,CAAE,IAAI,CACjBC,OAAO,CAAE,GACX,CAAC,CAAC,CAEF,KAAM,CAAAgC,MAAM,CAAG,GAAI,CAAA/F,KAAK,CAACgG,MAAM,CAAC3B,QAAQ,CAAEsB,QAAQ,CAAC,CACnDhF,KAAK,CAACuD,GAAG,CAAC6B,MAAM,CAAC,CAEjB,MAAO,CAAE1B,QAAQ,CAAE0B,MAAO,CAAC,CAC7B,CAAC,CAED,KAAM,CAAE1B,QAAQ,CAAE0B,MAAO,CAAC,CAAG3B,eAAe,CAAC,CAAC,CAE9C,KAAM,CAAA6B,KAAK,CAAG,GAAI,CAAAjG,KAAK,CAACkG,OAAO,CAAC,CAAC,CACjC,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtB,KAAM,CAAAC,aAAa,CAAG,EAAE,CAExB,KAAM,CAAAC,eAAe,CAAIC,KAAK,EAAK,CACjC,KAAM,CAAAC,IAAI,CAAGnG,QAAQ,CAACmB,OAAO,CAACiF,qBAAqB,CAAC,CAAC,CACrDP,KAAK,CAACjB,CAAC,CAAI,CAACsB,KAAK,CAACG,OAAO,CAAGF,IAAI,CAACG,IAAI,EAAIpF,KAAK,CAAI,CAAC,CAAG,CAAC,CACvD2E,KAAK,CAAChB,CAAC,CAAG,EAAE,CAACqB,KAAK,CAACK,OAAO,CAAGJ,IAAI,CAACK,GAAG,EAAInF,MAAM,CAAC,CAAG,CAAC,CAAG,CAAC,CAExD,KAAM,CAAAoF,MAAM,CAAG,GAAI,CAAA7G,KAAK,CAACoF,OAAO,CAACa,KAAK,CAACjB,CAAC,CAAEiB,KAAK,CAAChB,CAAC,CAAE,CAAC,CAAC,CACrD4B,MAAM,CAACC,SAAS,CAACjG,MAAM,CAAC,CACxB,KAAM,CAAAkG,GAAG,CAAGF,MAAM,CAACG,GAAG,CAACnG,MAAM,CAACiB,QAAQ,CAAC,CAACmF,SAAS,CAAC,CAAC,CACnD,KAAM,CAAAC,QAAQ,CAAG,CAACrG,MAAM,CAACiB,QAAQ,CAACoD,CAAC,CAAG6B,GAAG,CAAC7B,CAAC,CAC3C,KAAM,CAAAiC,GAAG,CAAGtG,MAAM,CAACiB,QAAQ,CAACsF,KAAK,CAAC,CAAC,CAAClD,GAAG,CAAC6C,GAAG,CAACM,cAAc,CAACH,QAAQ,CAAC,CAAC,CAErE5G,SAAS,CAACoC,OAAO,CAAC,CAAC4E,QAAQ,CAAE/D,CAAC,GAAK,CACjC,KAAM,CAAA2D,QAAQ,CAAGI,QAAQ,CAACxF,QAAQ,CAACyF,UAAU,CAACJ,GAAG,CAAC,CAClD,GAAID,QAAQ,CAAGf,WAAW,CAAE,CAC1B,KAAM,CAAAqB,KAAK,CAAG,CAACrB,WAAW,CAAGe,QAAQ,EAAIf,WAAW,CACpD,KAAM,CAAAsB,SAAS,CAAGN,GAAG,CAACC,KAAK,CAAC,CAAC,CAACJ,GAAG,CAACM,QAAQ,CAACxF,QAAQ,CAAC,CAACmF,SAAS,CAAC,CAAC,CAACI,cAAc,CAAC,CAACG,KAAK,CAAGpB,aAAa,CAAC,CACvGkB,QAAQ,CAAChC,QAAQ,CAACpB,GAAG,CAACuD,SAAS,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpBrH,QAAQ,CAACkB,OAAO,CAAGoG,qBAAqB,CAACD,OAAO,CAAC,CAEjDpH,SAAS,CAACoC,OAAO,CAAC,CAAC4E,QAAQ,CAAE/D,CAAC,GAAK,CACjC+D,QAAQ,CAACxF,QAAQ,CAACoC,GAAG,CAACoD,QAAQ,CAAChC,QAAQ,CAAC,CAExC,KAAM,CAAAsC,SAAS,CAAGN,QAAQ,CAACjC,gBAAgB,CAAC+B,KAAK,CAAC,CAAC,CAACJ,GAAG,CAACM,QAAQ,CAACxF,QAAQ,CAAC,CAC1E,KAAM,CAAAoF,QAAQ,CAAGU,SAAS,CAACC,MAAM,CAAC,CAAC,CACnC,GAAIX,QAAQ,CAAG,GAAG,CAAE,CAClBU,SAAS,CAACX,SAAS,CAAC,CAAC,CAACI,cAAc,CAAC,GAAG,CAAC,CACzCC,QAAQ,CAAChC,QAAQ,CAACpB,GAAG,CAAC0D,SAAS,CAAC,CAClC,CAEAN,QAAQ,CAAChC,QAAQ,CAAC+B,cAAc,CAAC,IAAI,CAAC,CAEtChD,QAAQ,CAACyD,UAAU,CAAChG,QAAQ,CAACiG,KAAK,CAACxE,CAAC,CAAG,CAAC,CAAC,CAAG+D,QAAQ,CAACxF,QAAQ,CAACkD,CAAC,CAC/DX,QAAQ,CAACyD,UAAU,CAAChG,QAAQ,CAACiG,KAAK,CAACxE,CAAC,CAAG,CAAC,CAAG,CAAC,CAAC,CAAG+D,QAAQ,CAACxF,QAAQ,CAACmD,CAAC,CACnEZ,QAAQ,CAACyD,UAAU,CAAChG,QAAQ,CAACiG,KAAK,CAACxE,CAAC,CAAG,CAAC,CAAG,CAAC,CAAC,CAAG+D,QAAQ,CAACxF,QAAQ,CAACoD,CAAC,CACrE,CAAC,CAAC,CAEFb,QAAQ,CAACyD,UAAU,CAAChG,QAAQ,CAACkG,WAAW,CAAG,IAAI,CAC/CjC,MAAM,CAACkC,QAAQ,CAAChD,CAAC,EAAI,MAAM,CAC3Bd,MAAM,CAAC8D,QAAQ,CAAChD,CAAC,EAAI,MAAM,CAE3B/D,QAAQ,CAACgH,MAAM,CAACvH,KAAK,CAAEE,MAAM,CAAC,CAChC,CAAC,CAED6G,OAAO,CAAC,CAAC,CAET3G,MAAM,CAACoH,gBAAgB,CAAC,QAAQ,CAAEC,YAAY,CAAC,CAC/ChI,QAAQ,CAACmB,OAAO,CAAC4G,gBAAgB,CAAC,WAAW,CAAE9B,eAAe,CAAC,CAE/D,QAAS,CAAA+B,YAAYA,CAAA,CAAG,CACtB,KAAM,CAAA9G,KAAK,CAAGlB,QAAQ,CAACmB,OAAO,CAACC,WAAW,CAC1C,KAAM,CAAAC,MAAM,CAAGrB,QAAQ,CAACmB,OAAO,CAACG,YAAY,CAE5Cb,MAAM,CAACwH,MAAM,CAAG/G,KAAK,CAAGG,MAAM,CAC9BZ,MAAM,CAACyH,sBAAsB,CAAC,CAAC,CAC/BpH,QAAQ,CAACS,OAAO,CAACL,KAAK,CAAEG,MAAM,CAAC,CACjC,CAEA,MAAO,IAAM,CACXV,MAAM,CAACwH,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CAClDhI,QAAQ,CAACmB,OAAO,CAACgH,mBAAmB,CAAC,WAAW,CAAElC,eAAe,CAAC,CAClEmC,oBAAoB,CAACnI,QAAQ,CAACkB,OAAO,CAAC,CACtCnB,QAAQ,CAACmB,OAAO,CAACkH,WAAW,CAACvH,QAAQ,CAACW,UAAU,CAAC,CACnD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBAAO3B,IAAA,QAAKwI,GAAG,CAAEtI,QAAS,CAACuI,KAAK,CAAE,CAAErH,KAAK,CAAE,MAAM,CAAEG,MAAM,CAAE,OAAQ,CAAE,CAAE,CAAC,CAC1E,CAAC,CAED,cAAe,CAAAtB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}