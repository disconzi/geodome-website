{"ast":null,"code":"/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { style } from '../decorators.js';\nimport { $getModelIsVisible, $renderer, $scene, $tick } from '../model-viewer-base.js';\nimport { degreesToRadians } from '../styles/conversions.js';\nimport { numberNode } from '../styles/parsers.js';\n// How much the model will rotate per\n// second in radians:\nconst DEFAULT_ROTATION_SPEED = Math.PI / 32;\nexport const AUTO_ROTATE_DELAY_DEFAULT = 3000;\nconst rotationRateIntrinsics = {\n  basis: [degreesToRadians(numberNode(DEFAULT_ROTATION_SPEED, 'rad'))],\n  keywords: {\n    auto: [null]\n  }\n};\nconst $autoRotateStartTime = Symbol('autoRotateStartTime');\nconst $radiansPerSecond = Symbol('radiansPerSecond');\nconst $syncRotationRate = Symbol('syncRotationRate');\nconst $onCameraChange = Symbol('onCameraChange');\nexport const StagingMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class StagingModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.autoRotate = false;\n      this.autoRotateDelay = AUTO_ROTATE_DELAY_DEFAULT;\n      this.rotationPerSecond = 'auto';\n      this[_a] = performance.now();\n      this[_b] = 0;\n      this[_c] = event => {\n        if (!this.autoRotate) {\n          return;\n        }\n        if (event.detail.source === 'user-interaction') {\n          this[$autoRotateStartTime] = performance.now();\n        }\n      };\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      this.addEventListener('camera-change', this[$onCameraChange]);\n      this[$autoRotateStartTime] = performance.now();\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.removeEventListener('camera-change', this[$onCameraChange]);\n      this[$autoRotateStartTime] = performance.now();\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('autoRotate')) {\n        this[$autoRotateStartTime] = performance.now();\n      }\n    }\n    [(_a = $autoRotateStartTime, _b = $radiansPerSecond, $syncRotationRate)](style) {\n      this[$radiansPerSecond] = style[0];\n    }\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n      if (!this.autoRotate || !this[$getModelIsVisible]() || this[$renderer].isPresenting) {\n        return;\n      }\n      const rotationDelta = Math.min(delta, time - this[$autoRotateStartTime] - this.autoRotateDelay);\n      if (rotationDelta > 0) {\n        this[$scene].yaw = this.turntableRotation + this[$radiansPerSecond] * rotationDelta * 0.001;\n      }\n    }\n    get turntableRotation() {\n      return this[$scene].yaw;\n    }\n    resetTurntableRotation(theta = 0) {\n      this[$scene].yaw = theta;\n    }\n  }\n  _c = $onCameraChange;\n  __decorate([property({\n    type: Boolean,\n    attribute: 'auto-rotate'\n  })], StagingModelViewerElement.prototype, \"autoRotate\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'auto-rotate-delay'\n  })], StagingModelViewerElement.prototype, \"autoRotateDelay\", void 0);\n  __decorate([style({\n    intrinsics: rotationRateIntrinsics,\n    updateHandler: $syncRotationRate\n  }), property({\n    type: String,\n    attribute: 'rotation-per-second'\n  })], StagingModelViewerElement.prototype, \"rotationPerSecond\", void 0);\n  return StagingModelViewerElement;\n};","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","property","style","$getModelIsVisible","$renderer","$scene","$tick","degreesToRadians","numberNode","DEFAULT_ROTATION_SPEED","Math","PI","AUTO_ROTATE_DELAY_DEFAULT","rotationRateIntrinsics","basis","keywords","auto","$autoRotateStartTime","Symbol","$radiansPerSecond","$syncRotationRate","$onCameraChange","StagingMixin","ModelViewerElement","_a","_b","_c","StagingModelViewerElement","constructor","autoRotate","autoRotateDelay","rotationPerSecond","performance","now","event","detail","source","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","updated","changedProperties","has","time","delta","isPresenting","rotationDelta","min","yaw","turntableRotation","resetTurntableRotation","theta","type","Boolean","attribute","prototype","Number","intrinsics","updateHandler","String"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/node_modules/@google/model-viewer/lib/features/staging.js"],"sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { style } from '../decorators.js';\nimport { $getModelIsVisible, $renderer, $scene, $tick } from '../model-viewer-base.js';\nimport { degreesToRadians } from '../styles/conversions.js';\nimport { numberNode } from '../styles/parsers.js';\n// How much the model will rotate per\n// second in radians:\nconst DEFAULT_ROTATION_SPEED = Math.PI / 32;\nexport const AUTO_ROTATE_DELAY_DEFAULT = 3000;\nconst rotationRateIntrinsics = {\n    basis: [degreesToRadians(numberNode(DEFAULT_ROTATION_SPEED, 'rad'))],\n    keywords: { auto: [null] }\n};\nconst $autoRotateStartTime = Symbol('autoRotateStartTime');\nconst $radiansPerSecond = Symbol('radiansPerSecond');\nconst $syncRotationRate = Symbol('syncRotationRate');\nconst $onCameraChange = Symbol('onCameraChange');\nexport const StagingMixin = (ModelViewerElement) => {\n    var _a, _b, _c;\n    class StagingModelViewerElement extends ModelViewerElement {\n        constructor() {\n            super(...arguments);\n            this.autoRotate = false;\n            this.autoRotateDelay = AUTO_ROTATE_DELAY_DEFAULT;\n            this.rotationPerSecond = 'auto';\n            this[_a] = performance.now();\n            this[_b] = 0;\n            this[_c] = (event) => {\n                if (!this.autoRotate) {\n                    return;\n                }\n                if (event.detail.source === 'user-interaction') {\n                    this[$autoRotateStartTime] = performance.now();\n                }\n            };\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            this.addEventListener('camera-change', this[$onCameraChange]);\n            this[$autoRotateStartTime] = performance.now();\n        }\n        disconnectedCallback() {\n            super.disconnectedCallback();\n            this.removeEventListener('camera-change', this[$onCameraChange]);\n            this[$autoRotateStartTime] = performance.now();\n        }\n        updated(changedProperties) {\n            super.updated(changedProperties);\n            if (changedProperties.has('autoRotate')) {\n                this[$autoRotateStartTime] = performance.now();\n            }\n        }\n        [(_a = $autoRotateStartTime, _b = $radiansPerSecond, $syncRotationRate)](style) {\n            this[$radiansPerSecond] = style[0];\n        }\n        [$tick](time, delta) {\n            super[$tick](time, delta);\n            if (!this.autoRotate || !this[$getModelIsVisible]() ||\n                this[$renderer].isPresenting) {\n                return;\n            }\n            const rotationDelta = Math.min(delta, time - this[$autoRotateStartTime] - this.autoRotateDelay);\n            if (rotationDelta > 0) {\n                this[$scene].yaw = this.turntableRotation +\n                    this[$radiansPerSecond] * rotationDelta * 0.001;\n            }\n        }\n        get turntableRotation() {\n            return this[$scene].yaw;\n        }\n        resetTurntableRotation(theta = 0) {\n            this[$scene].yaw = theta;\n        }\n    }\n    _c = $onCameraChange;\n    __decorate([\n        property({ type: Boolean, attribute: 'auto-rotate' })\n    ], StagingModelViewerElement.prototype, \"autoRotate\", void 0);\n    __decorate([\n        property({ type: Number, attribute: 'auto-rotate-delay' })\n    ], StagingModelViewerElement.prototype, \"autoRotateDelay\", void 0);\n    __decorate([\n        style({ intrinsics: rotationRateIntrinsics, updateHandler: $syncRotationRate }),\n        property({ type: String, attribute: 'rotation-per-second' })\n    ], StagingModelViewerElement.prototype, \"rotationPerSecond\", void 0);\n    return StagingModelViewerElement;\n};\n//# sourceMappingURL=staging.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}