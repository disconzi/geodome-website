{"ast":null,"code":"import React,{useState}from'react';import QRCode from'qrcode.react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScanButton=_ref=>{let{onModelUploaded}=_ref;const[showQR,setShowQR]=useState(false);const[sessionId,setSessionId]=useState(null);const[scanning,setScanning]=useState(false);const startScanning=()=>{const newSessionId=Math.random().toString(36).substring(7);setSessionId(newSessionId);setShowQR(true);setScanning(true);pollForModel(newSessionId);};const pollForModel=async sid=>{if(!scanning)return;try{const response=await fetch(\"/api/scan-status/\".concat(sid));const data=await response.json();if(data.status==='complete'&&data.modelUrl){setShowQR(false);setScanning(false);onModelUploaded(data.modelUrl);}else if(data.status==='processing'){// Poll again in 3 seconds\nsetTimeout(()=>pollForModel(sid),3000);}}catch(error){console.error('Error checking scan status:',error);setShowQR(false);setScanning(false);}};const getQRContent=()=>{// This URL should point to your iOS app's custom URL scheme\nreturn\"rosasdodeserto://scan/\".concat(sessionId);};return/*#__PURE__*/_jsxs(\"div\",{className:\"scan-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startScanning,className:\"scan-button\",disabled:scanning,children:scanning?'Scanning in progress...':'Scan New Object'}),showQR&&/*#__PURE__*/_jsx(\"div\",{className:\"qr-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"qr-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Scan QR Code\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Open the Rosas do Deserto app to scan your object\"}),/*#__PURE__*/_jsx(QRCode,{value:getQRContent(),size:256}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowQR(false),children:\"Close\"})]})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:\"\\n        .scan-button-container {\\n          position: fixed;\\n          bottom: 2rem;\\n          right: 2rem;\\n          z-index: 1000;\\n        }\\n\\n        .scan-button {\\n          background: #2196F3;\\n          color: white;\\n          padding: 1rem 2rem;\\n          border: none;\\n          border-radius: 8px;\\n          font-size: 1.1rem;\\n          cursor: pointer;\\n          transition: background 0.3s ease;\\n        }\\n\\n        .scan-button:hover {\\n          background: #1976D2;\\n        }\\n\\n        .scan-button:disabled {\\n          background: #90CAF9;\\n          cursor: not-allowed;\\n        }\\n\\n        .qr-modal {\\n          position: fixed;\\n          top: 0;\\n          left: 0;\\n          right: 0;\\n          bottom: 0;\\n          background: rgba(0, 0, 0, 0.7);\\n          display: flex;\\n          justify-content: center;\\n          align-items: center;\\n        }\\n\\n        .qr-content {\\n          background: white;\\n          padding: 2rem;\\n          border-radius: 12px;\\n          text-align: center;\\n        }\\n\\n        .qr-content h3 {\\n          margin-top: 0;\\n        }\\n\\n        .qr-content button {\\n          margin-top: 1rem;\\n          padding: 0.5rem 1rem;\\n          background: #f44336;\\n          color: white;\\n          border: none;\\n          border-radius: 4px;\\n          cursor: pointer;\\n        }\\n      \"})]});};export default ScanButton;","map":{"version":3,"names":["React","useState","QRCode","jsx","_jsx","jsxs","_jsxs","ScanButton","_ref","onModelUploaded","showQR","setShowQR","sessionId","setSessionId","scanning","setScanning","startScanning","newSessionId","Math","random","toString","substring","pollForModel","sid","response","fetch","concat","data","json","status","modelUrl","setTimeout","error","console","getQRContent","className","children","onClick","disabled","value","size"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ScanButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\n\nconst ScanButton = ({ onModelUploaded }) => {\n  const [showQR, setShowQR] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [scanning, setScanning] = useState(false);\n\n  const startScanning = () => {\n    const newSessionId = Math.random().toString(36).substring(7);\n    setSessionId(newSessionId);\n    setShowQR(true);\n    setScanning(true);\n    pollForModel(newSessionId);\n  };\n\n  const pollForModel = async (sid) => {\n    if (!scanning) return;\n\n    try {\n      const response = await fetch(`/api/scan-status/${sid}`);\n      const data = await response.json();\n\n      if (data.status === 'complete' && data.modelUrl) {\n        setShowQR(false);\n        setScanning(false);\n        onModelUploaded(data.modelUrl);\n      } else if (data.status === 'processing') {\n        // Poll again in 3 seconds\n        setTimeout(() => pollForModel(sid), 3000);\n      }\n    } catch (error) {\n      console.error('Error checking scan status:', error);\n      setShowQR(false);\n      setScanning(false);\n    }\n  };\n\n  const getQRContent = () => {\n    // This URL should point to your iOS app's custom URL scheme\n    return `rosasdodeserto://scan/${sessionId}`;\n  };\n\n  return (\n    <div className=\"scan-button-container\">\n      <button\n        onClick={startScanning}\n        className=\"scan-button\"\n        disabled={scanning}\n      >\n        {scanning ? 'Scanning in progress...' : 'Scan New Object'}\n      </button>\n\n      {showQR && (\n        <div className=\"qr-modal\">\n          <div className=\"qr-content\">\n            <h3>Scan QR Code</h3>\n            <p>Open the Rosas do Deserto app to scan your object</p>\n            <QRCode value={getQRContent()} size={256} />\n            <button onClick={() => setShowQR(false)}>Close</button>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .scan-button-container {\n          position: fixed;\n          bottom: 2rem;\n          right: 2rem;\n          z-index: 1000;\n        }\n\n        .scan-button {\n          background: #2196F3;\n          color: white;\n          padding: 1rem 2rem;\n          border: none;\n          border-radius: 8px;\n          font-size: 1.1rem;\n          cursor: pointer;\n          transition: background 0.3s ease;\n        }\n\n        .scan-button:hover {\n          background: #1976D2;\n        }\n\n        .scan-button:disabled {\n          background: #90CAF9;\n          cursor: not-allowed;\n        }\n\n        .qr-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .qr-content {\n          background: white;\n          padding: 2rem;\n          border-radius: 12px;\n          text-align: center;\n        }\n\n        .qr-content h3 {\n          margin-top: 0;\n        }\n\n        .qr-content button {\n          margin-top: 1rem;\n          padding: 0.5rem 1rem;\n          background: #f44336;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ScanButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}