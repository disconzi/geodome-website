{"ast":null,"code":"var _jsxFileName = \"/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ModelViewer.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelViewer({\n  modelUrl\n}) {\n  const getModelPath = (url, extension) => {\n    // Remove any leading slash and ensure we're using the correct extension\n    const basePath = url.replace(/^\\//, '').replace(/\\.(glb|usdz)$/, '');\n    return `${window.location.origin}/${basePath}.${extension}`;\n  };\n  const handleARClick = () => {\n    // For iOS, use USDZ file\n    if (/iPhone|iPad|iPod/.test(navigator.userAgent)) {\n      const usdzUrl = getModelPath(modelUrl, 'usdz');\n      window.location.href = usdzUrl;\n      return;\n    }\n\n    // For other devices, use the GLB with WebXR\n    const glbUrl = getModelPath(modelUrl, 'glb');\n    const handlerUrl = `${window.location.origin}/ar-handler.html?model=${encodeURIComponent(glbUrl)}`;\n    window.location.href = handlerUrl;\n  };\n\n  // Get the correct GLB URL for the model viewer\n  const glbUrl = getModelPath(modelUrl, 'glb');\n  const usdzUrl = getModelPath(modelUrl, 'usdz');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[400px] relative\",\n    children: /*#__PURE__*/_jsxDEV(\"model-viewer\", {\n      src: glbUrl,\n      \"ios-src\": usdzUrl,\n      \"camera-controls\": true,\n      \"auto-rotate\": true,\n      ar: true,\n      \"ar-modes\": \"webxr scene-viewer quick-look\",\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#f3f4f6'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleARClick,\n        className: \"absolute bottom-4 left-4 right-4 bg-emerald-600 hover:bg-emerald-700 text-white py-3 px-4 rounded-lg text-center font-medium transition-colors flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-5 w-5 mr-2\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"Ver em AR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = ModelViewer;\nexport default ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ModelViewer","modelUrl","getModelPath","url","extension","basePath","replace","window","location","origin","handleARClick","test","navigator","userAgent","usdzUrl","href","glbUrl","handlerUrl","encodeURIComponent","className","children","src","ar","style","width","height","backgroundColor","onClick","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/src/components/ModelViewer.js"],"sourcesContent":["import React from 'react';\n\nfunction ModelViewer({ modelUrl }) {\n  const getModelPath = (url, extension) => {\n    // Remove any leading slash and ensure we're using the correct extension\n    const basePath = url.replace(/^\\//, '').replace(/\\.(glb|usdz)$/, '');\n    return `${window.location.origin}/${basePath}.${extension}`;\n  };\n\n  const handleARClick = () => {\n    // For iOS, use USDZ file\n    if (/iPhone|iPad|iPod/.test(navigator.userAgent)) {\n      const usdzUrl = getModelPath(modelUrl, 'usdz');\n      window.location.href = usdzUrl;\n      return;\n    }\n    \n    // For other devices, use the GLB with WebXR\n    const glbUrl = getModelPath(modelUrl, 'glb');\n    const handlerUrl = `${window.location.origin}/ar-handler.html?model=${encodeURIComponent(glbUrl)}`;\n    window.location.href = handlerUrl;\n  };\n\n  // Get the correct GLB URL for the model viewer\n  const glbUrl = getModelPath(modelUrl, 'glb');\n  const usdzUrl = getModelPath(modelUrl, 'usdz');\n\n  return (\n    <div className=\"w-full h-[400px] relative\">\n      <model-viewer\n        src={glbUrl}\n        ios-src={usdzUrl}\n        camera-controls\n        auto-rotate\n        ar\n        ar-modes=\"webxr scene-viewer quick-look\"\n        style={{ width: '100%', height: '100%', backgroundColor: '#f3f4f6' }}\n      >\n        <button\n          onClick={handleARClick}\n          className=\"absolute bottom-4 left-4 right-4 bg-emerald-600 hover:bg-emerald-700 text-white py-3 px-4 rounded-lg text-center font-medium transition-colors flex items-center justify-center\"\n        >\n          <svg className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          </svg>\n          Ver em AR\n        </button>\n      </model-viewer>\n    </div>\n  );\n}\n\nexport default ModelViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACjC,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;IACvC;IACA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;IACpE,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,IAAIJ,QAAQ,IAAID,SAAS,EAAE;EAC7D,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAI,kBAAkB,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,EAAE;MAChD,MAAMC,OAAO,GAAGZ,YAAY,CAACD,QAAQ,EAAE,MAAM,CAAC;MAC9CM,MAAM,CAACC,QAAQ,CAACO,IAAI,GAAGD,OAAO;MAC9B;IACF;;IAEA;IACA,MAAME,MAAM,GAAGd,YAAY,CAACD,QAAQ,EAAE,KAAK,CAAC;IAC5C,MAAMgB,UAAU,GAAG,GAAGV,MAAM,CAACC,QAAQ,CAACC,MAAM,0BAA0BS,kBAAkB,CAACF,MAAM,CAAC,EAAE;IAClGT,MAAM,CAACC,QAAQ,CAACO,IAAI,GAAGE,UAAU;EACnC,CAAC;;EAED;EACA,MAAMD,MAAM,GAAGd,YAAY,CAACD,QAAQ,EAAE,KAAK,CAAC;EAC5C,MAAMa,OAAO,GAAGZ,YAAY,CAACD,QAAQ,EAAE,MAAM,CAAC;EAE9C,oBACEF,OAAA;IAAKoB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCrB,OAAA;MACEsB,GAAG,EAAEL,MAAO;MACZ,WAASF,OAAQ;MACjB,uBAAe;MACf,mBAAW;MACXQ,EAAE;MACF,YAAS,+BAA+B;MACxCC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAN,QAAA,eAErErB,OAAA;QACE4B,OAAO,EAAEjB,aAAc;QACvBS,SAAS,EAAC,iLAAiL;QAAAC,QAAA,gBAE3LrB,OAAA;UAAKoB,SAAS,EAAC,cAAc;UAACS,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAAAV,QAAA,eACjFrB,OAAA;YAAMgC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAA6E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClJ,CAAC,aAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACC,EAAA,GAhDQvC,WAAW;AAkDpB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}