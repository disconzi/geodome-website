{"ast":null,"code":"/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Image } from './image.js';\nimport { Sampler } from './sampler.js';\nimport { $correlatedObjects, ThreeDOMElement } from './three-dom-element.js';\nconst $image = Symbol('image');\nconst $sampler = Symbol('sampler');\nconst $threeTexture = Symbol('threeTexture');\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement {\n  constructor(onUpdate, threeTexture) {\n    super(onUpdate, new Set(threeTexture ? [threeTexture] : []));\n    this[$sampler] = new Sampler(onUpdate, threeTexture);\n    this[$image] = new Image(onUpdate, threeTexture);\n  }\n  get [$threeTexture]() {\n    var _a;\n    return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n  }\n  get name() {\n    return this[$threeTexture].name || '';\n  }\n  set name(name) {\n    for (const texture of this[$correlatedObjects]) {\n      texture.name = name;\n    }\n  }\n  get sampler() {\n    return this[$sampler];\n  }\n  get source() {\n    return this[$image];\n  }\n}","map":{"version":3,"names":["Image","Sampler","$correlatedObjects","ThreeDOMElement","$image","Symbol","$sampler","$threeTexture","Texture","constructor","onUpdate","threeTexture","Set","_a","values","next","value","name","texture","sampler","source"],"sources":["/Users/leandrodisconzi/CascadeProjects/geodome-website/node_modules/@google/model-viewer/lib/features/scene-graph/texture.js"],"sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Image } from './image.js';\nimport { Sampler } from './sampler.js';\nimport { $correlatedObjects, ThreeDOMElement } from './three-dom-element.js';\nconst $image = Symbol('image');\nconst $sampler = Symbol('sampler');\nconst $threeTexture = Symbol('threeTexture');\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement {\n    constructor(onUpdate, threeTexture) {\n        super(onUpdate, new Set(threeTexture ? [threeTexture] : []));\n        this[$sampler] = new Sampler(onUpdate, threeTexture);\n        this[$image] = new Image(onUpdate, threeTexture);\n    }\n    get [$threeTexture]() {\n        var _a;\n        return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n    }\n    get name() {\n        return this[$threeTexture].name || '';\n    }\n    set name(name) {\n        for (const texture of this[$correlatedObjects]) {\n            texture.name = name;\n        }\n    }\n    get sampler() {\n        return this[$sampler];\n    }\n    get source() {\n        return this[$image];\n    }\n}\n//# sourceMappingURL=texture.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,YAAY;AAClC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,wBAAwB;AAC5E,MAAMC,MAAM,GAAGC,MAAM,CAAC,OAAO,CAAC;AAC9B,MAAMC,QAAQ,GAAGD,MAAM,CAAC,SAAS,CAAC;AAClC,MAAME,aAAa,GAAGF,MAAM,CAAC,cAAc,CAAC;AAC5C;AACA;AACA;AACA,OAAO,MAAMG,OAAO,SAASL,eAAe,CAAC;EACzCM,WAAWA,CAACC,QAAQ,EAAEC,YAAY,EAAE;IAChC,KAAK,CAACD,QAAQ,EAAE,IAAIE,GAAG,CAACD,YAAY,GAAG,CAACA,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5D,IAAI,CAACL,QAAQ,CAAC,GAAG,IAAIL,OAAO,CAACS,QAAQ,EAAEC,YAAY,CAAC;IACpD,IAAI,CAACP,MAAM,CAAC,GAAG,IAAIJ,KAAK,CAACU,QAAQ,EAAEC,YAAY,CAAC;EACpD;EACA,KAAKJ,aAAa,IAAI;IAClB,IAAIM,EAAE;IACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACX,kBAAkB,CAAC,MAAM,IAAI,IAAIW,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK;EACxG;EACA,IAAIC,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACV,aAAa,CAAC,CAACU,IAAI,IAAI,EAAE;EACzC;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACX,KAAK,MAAMC,OAAO,IAAI,IAAI,CAAChB,kBAAkB,CAAC,EAAE;MAC5CgB,OAAO,CAACD,IAAI,GAAGA,IAAI;IACvB;EACJ;EACA,IAAIE,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACb,QAAQ,CAAC;EACzB;EACA,IAAIc,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAAChB,MAAM,CAAC;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}